plugins {
    id 'application'
    id 'java'
}

repositories {
    mavenCentral()
}

dependencies {
    // VersiÃ³n correcta de JCEF Maven
    implementation 'me.friwi:jcefmaven:135.0.20'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    mainClass = 'org.caffeine.app.App'
}

tasks.named('test') {
    useJUnitPlatform()
}

// ConfiguraciÃ³n para empaquetar todo en un JAR ejecutable
tasks.register('fatJar', Jar) {
    group = 'build'
    description = 'Crea un JAR ejecutable con todas las dependencias y el frontend'
    
    // Nombre del JAR
    archiveBaseName.set('Caffeine')
    archiveVersion.set('1.0.0')
    archiveClassifier.set('all')
    
    // Incluir el manifest con la clase principal
    manifest {
        attributes(
            'Main-Class': 'org.caffeine.app.App',
            'Multi-Release': 'true'
        )
    }
    
    // Incluir todas las clases compiladas
    from sourceSets.main.output
    
    // Incluir todas las dependencias
    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }
    
    // Copiar los archivos del frontend dentro del JAR
    from('../../frontend') {
        into 'frontend'
        exclude 'node_modules/**'
        exclude 'package*.json'
        exclude 'README.md'
        exclude '.git/**'
        exclude '.gitignore'
    }
    
    // Evitar duplicados
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    
    // Mostrar mensaje al finalizar
    doLast {
        println ""
        println "========================================="
        println "âœ… JAR creado exitosamente"
        println "========================================="
        println "ðŸ“¦ UbicaciÃ³n: ${archiveFile.get().asFile.absolutePath}"
        println ""
    }
}

// Tarea para construir todo (compilar + empaquetar)
tasks.register('buildApp') {
    group = 'build'
    description = 'Compila y empaqueta la aplicaciÃ³n completa'
    
    dependsOn 'fatJar'
    
    doLast {
        println "ðŸš€ Para ejecutar la aplicaciÃ³n:"
        println "   java -jar app/build/libs/Caffeine-1.0.0-all.jar"
        println "========================================="
    }
}